{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    cartItems: []\n  },\n  reducers: {\n    addProduct: (state, action) => {\n      const productToAdd = action.payload;\n      const productIndex = state.cartItems.findIndex(p => p._id === productToAdd._id);\n      if (productIndex === -1) {\n        state.cartItems.push({\n          ...productToAdd,\n          quantity: 1\n        });\n      } else {\n        state.cartItems[productIndex].quantity += 1;\n      }\n    },\n    deleteProduct: (state, action) => {\n      const productIdToRemove = action.payload._id;\n      console.log(productIdToRemove);\n      state.cartItems = state.cartItems.filter(item => item._id !== productIdToRemove);\n    },\n    updateQuantity: (state, action) => {\n      const {\n        _id,\n        quantity\n      } = action.payload;\n      const productToUpdateIndex = state.cartItems.findIndex(p => p._id === _id);\n      console.log(state.cartItems[productToUpdateIndex]);\n      if (productToUpdateIndex !== -1) {\n        const newQuantity = Math.max(1, quantity);\n        state.cartItems[productToUpdateIndex].quantity = newQuantity;\n      }\n    },\n    updateSizeProduct: (state, action) => {\n      const {\n        _id,\n        sizeOrder\n      } = action.payload;\n      const productToUpdateIndex = state.cartItems.findIndex(p => p._id === _id);\n      const updatedProduct = {\n        ...state.cartItems[productToUpdateIndex],\n        sizeOrder\n      };\n      state.cartItems[productToUpdateIndex] = updatedProduct;\n    }\n  }\n});\nexport const {\n  addProduct,\n  deleteProduct,\n  updateQuantity\n} = cartSlice.actions;\nexport const selectCart = state => state.cart;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","cartItems","reducers","addProduct","state","action","productToAdd","payload","productIndex","findIndex","p","_id","push","quantity","deleteProduct","productIdToRemove","console","log","filter","item","updateQuantity","productToUpdateIndex","newQuantity","Math","max","updateSizeProduct","sizeOrder","updatedProduct","actions","selectCart","cart","reducer"],"sources":["C:/Users/truon/OneDrive/Máy tính/Project-Shop/Client/src/redux/Slice/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    cartItems: [],\r\n  },\r\n  reducers: {\r\n    addProduct: (state, action) => {\r\n      const productToAdd = action.payload;\r\n      const productIndex = state.cartItems.findIndex((p) => p._id === productToAdd._id);\r\n\r\n      if (productIndex === -1) {\r\n        state.cartItems.push({ ...productToAdd, quantity: 1 });\r\n      } else {\r\n        state.cartItems[productIndex].quantity += 1;\r\n      }\r\n    },\r\n    deleteProduct: (state, action) => {\r\n      const productIdToRemove = action.payload._id;\r\n      console.log(productIdToRemove)\r\n      state.cartItems = state.cartItems.filter((item) => item._id !== productIdToRemove);\r\n    },\r\n    updateQuantity: (state, action) => {\r\n      const { _id, quantity } = action.payload;\r\n      const productToUpdateIndex = state.cartItems.findIndex((p) => p._id === _id);\r\n\r\n      console.log(state.cartItems[productToUpdateIndex])\r\n      if (productToUpdateIndex !== -1) {\r\n        const newQuantity = Math.max(1, quantity);\r\n        state.cartItems[productToUpdateIndex].quantity = newQuantity;\r\n      }\r\n    },\r\n    updateSizeProduct: (state,action) =>{\r\n      const { _id, sizeOrder } = action.payload;\r\n      const productToUpdateIndex = state.cartItems.findIndex((p) => p._id === _id);\r\n      const updatedProduct = { ...state.cartItems[productToUpdateIndex], sizeOrder };\r\n\r\n        state.cartItems[productToUpdateIndex] = updatedProduct;\r\n    }\r\n  },\r\n});\r\n\r\nexport const { addProduct, deleteProduct ,updateQuantity} = cartSlice.actions;\r\nexport const selectCart = (state) => state.cart;\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,SAAS,EAAE;EACb,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAMC,YAAY,GAAGD,MAAM,CAACE,OAAO;MACnC,MAAMC,YAAY,GAAGJ,KAAK,CAACH,SAAS,CAACQ,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAKL,YAAY,CAACK,GAAG,CAAC;MAEjF,IAAIH,YAAY,KAAK,CAAC,CAAC,EAAE;QACvBJ,KAAK,CAACH,SAAS,CAACW,IAAI,CAAC;UAAE,GAAGN,YAAY;UAAEO,QAAQ,EAAE;QAAE,CAAC,CAAC;MACxD,CAAC,MAAM;QACLT,KAAK,CAACH,SAAS,CAACO,YAAY,CAAC,CAACK,QAAQ,IAAI,CAAC;MAC7C;IACF,CAAC;IACDC,aAAa,EAAEA,CAACV,KAAK,EAAEC,MAAM,KAAK;MAChC,MAAMU,iBAAiB,GAAGV,MAAM,CAACE,OAAO,CAACI,GAAG;MAC5CK,OAAO,CAACC,GAAG,CAACF,iBAAiB,CAAC;MAC9BX,KAAK,CAACH,SAAS,GAAGG,KAAK,CAACH,SAAS,CAACiB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACR,GAAG,KAAKI,iBAAiB,CAAC;IACpF,CAAC;IACDK,cAAc,EAAEA,CAAChB,KAAK,EAAEC,MAAM,KAAK;MACjC,MAAM;QAAEM,GAAG;QAAEE;MAAS,CAAC,GAAGR,MAAM,CAACE,OAAO;MACxC,MAAMc,oBAAoB,GAAGjB,KAAK,CAACH,SAAS,CAACQ,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAKA,GAAG,CAAC;MAE5EK,OAAO,CAACC,GAAG,CAACb,KAAK,CAACH,SAAS,CAACoB,oBAAoB,CAAC,CAAC;MAClD,IAAIA,oBAAoB,KAAK,CAAC,CAAC,EAAE;QAC/B,MAAMC,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEX,QAAQ,CAAC;QACzCT,KAAK,CAACH,SAAS,CAACoB,oBAAoB,CAAC,CAACR,QAAQ,GAAGS,WAAW;MAC9D;IACF,CAAC;IACDG,iBAAiB,EAAEA,CAACrB,KAAK,EAACC,MAAM,KAAI;MAClC,MAAM;QAAEM,GAAG;QAAEe;MAAU,CAAC,GAAGrB,MAAM,CAACE,OAAO;MACzC,MAAMc,oBAAoB,GAAGjB,KAAK,CAACH,SAAS,CAACQ,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAKA,GAAG,CAAC;MAC5E,MAAMgB,cAAc,GAAG;QAAE,GAAGvB,KAAK,CAACH,SAAS,CAACoB,oBAAoB,CAAC;QAAEK;MAAU,CAAC;MAE5EtB,KAAK,CAACH,SAAS,CAACoB,oBAAoB,CAAC,GAAGM,cAAc;IAC1D;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAExB,UAAU;EAAEW,aAAa;EAAEM;AAAc,CAAC,GAAGtB,SAAS,CAAC8B,OAAO;AAC7E,OAAO,MAAMC,UAAU,GAAIzB,KAAK,IAAKA,KAAK,CAAC0B,IAAI;AAC/C,eAAehC,SAAS,CAACiC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}